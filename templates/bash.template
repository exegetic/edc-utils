#!/usr/bin/env bash
set -euo pipefail    ## "strict mode": exit on command errs or undefined vars

###|  Usage: {{{script_name}}} [OPTION]... ARGUMENT
 ##|  ____Brief description...____
 ##:  
 ##:  By {{{author_name}}} <{{{email_address}}}>, {{{date}}}
 ##:  Version {{{}}}, {{{date}}}
 ##|  
 ##|  Example:
 ##|    {{{script_name}}} ____Some set of options & args...____
 ##|  
 ##|  Options:
 ##|    -h, --help                 display this help and exit
 ##|  
 ##|  ____Further documentation...____
 ###

##----|    Globals    |------------------------------------------------------##

declare -r SCRIPT_PATH="${BASH_SOURCE[0]}"
declare -r SCRIPT_NAME=$(basename "${BASH_SOURCE[0]}")

##|  Variables
#declare var

##|  Exported variables
#declare -g var

##----|    Functions    |----------------------------------------------------##

print_usage() {
  local -r doc_prefix="^[# ]##|  "
  cat "${SCRIPT_PATH}"             \
      | grep -e "${doc_prefix}"    \
      | sed -e "s/${doc_prefix}//g" -e "s/{{{script_name}}}/${SCRIPT_NAME}/g"
}

echo_err() {  echo "${SCRIPT_PATH}: $@" >&2 ; }

##----|    Initialize    |---------------------------------------------------##

##|  Process options
while getopts ":h-:" optchar; do
  case "${optchar}" in
    -) case "${OPTARG:-}" in
         help) print_usage                              ; exit 0 ;;
            *) echo_err "Illegal option: --${OPTARG:-}" ; exit 1 ;;
       esac;;
    h) print_usage                                      ; exit 0 ;;
    *) echo_err "Illegal option: -${OPTARG:-}"          ; exit 1 ;;
  esac
done
shift $((OPTIND-1))

##|  Validate args
if (( $# < 1 )) ; then
  echo_err "Requires at least 1 argument."
  exit 1
fi

##----|    Run    |----------------------------------------------------------##

echo "Running: ${SCRIPT_NAME} ${@}"

exit 0

