#!/usr/bin/env bash
set -euo pipefail    ## "strict mode": exit on command errs or undefined vars

###|  Usage: {{{script_name}}} [OPTION]... ARGUMENT
 ##|  ____Brief description...____
 ##:  
 ##:  By {{{author_name}}} <{{{email_address}}}>, {{{date}}}
 ##|  
 ##|  Example:
 ##|    {{{script_name}}} ____Some set of options & args...____
 ##|  
 ##|  Options:
 ##|    -h, --help                 display this help and exit
 ##|  
 ##|  ____Further documentation...____
 ###

##|  Constants
declare -r script_path="${BASH_SOURCE[0]}"
declare -r script_name=$(basename "${script_path}")

##|  Variables
#declare var

##|  Exported variables
#declare -g var


##----|  Functions  |--------------------------------------------------------##

print_usage() {
  local -r doc_prefix="^[# ]##|  "
  cat "${script_path}"             \
      | grep -e "${doc_prefix}"    \
      | sed -e "s/${doc_prefix}//g" -e "s/{{{script_name}}}/${script_name}/g"
}

echo_err() {  echo "${script_path}: $@" >&2 ; }


##----|  Main  |-------------------------------------------------------------##

##|  Process options & evaluate appropriate function(s)
 #|  
main() {
  while getopts ":h-:" optchar; do
    case "${optchar}" in
      -) case "${OPTARG:-}" in
           help) print_usage                              ; exit 0 ;;
           also) echo "ALSO"                              ;;
              *) echo_err "Illegal opt option: --${OPTARG:-}" ; exit 1 ;;
         esac;;
      h) print_usage                                      ; exit 0 ;;
      a) echo "Also"                                      ;;
      *) echo_err "Illegal option: -${OPTARG:-}"          ; exit 1 ;;
    esac
  done
  shift $((OPTIND-1))

  ##|  Validate args
  if (( $# < 1 )) ; then
    echo_err "Requires at least 1 argument."
    exit 1
  fi 

  echo "Running: ${script_name} ${@}"
}

##|  Run!
 #|  
main "${@}" && exit 0


